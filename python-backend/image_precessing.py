# -*- coding: utf-8 -*-
"""Image Precessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1q5Bi1hnfy3Nysm9g8qAHA7RmMazTQ-LV
"""

from PIL import Image
import cv2
import numpy as np
import pandas as pd


image = Image.open("Screenshot 2025-04-12 223410.png")
image_cv = cv2.cvtColor(np.array(image), cv2.COLOR_RGB2BGR)

gray = cv2.cvtColor(image_cv, cv2.COLOR_BGR2GRAY)
thresh = cv2.threshold(gray, 150, 255, cv2.THRESH_BINARY_INV)[1]


from paddleocr import PaddleOCR

ocr = PaddleOCR(use_angle_cls=True, lang='en')
results = ocr.ocr("Screenshot 2025-04-12 223410.png", cls=True)

text = "\n".join([line[1][0] for line in results[0]])
print("ðŸ“„ PaddleOCR Output:\n", text)



course_df = pd.read_csv("coursera_skill_clusters (1).csv")

known_courses = course_df["course"].dropna().str.lower().tolist()


def verify_certificate(text, user_name, known_courses_df):
    text_lower = text.lower()

    # Match courses whose name appears in the certificate text
    matched_courses = []
    for idx, row in known_courses_df.iterrows():
        course_name = row["course"].lower()
        if course_name in text_lower:
            matched_courses.append({
                "course_name": row["course"],
                "cluster": row["cluster"]  # Assuming cluster label is stored
            })

    # Check for valid platform name
    platform_found = any(p in text_lower for p in ["coursera", "udemy", "edx", "skillshare"])
    user_verified = user_name.lower() in text_lower

    return {
        "courses_found": matched_courses,
        "platform_verified": platform_found,
        "user_name_verified": user_verified,
        "valid_certificate": bool(matched_courses and platform_found)
    }

# Assuming `clustered_courses_df` has columns: ["course_name", "cluster", ...]
result = verify_certificate(
    text=text,
    user_name="Manil Modi",
    known_courses_df=course_df
)

print(result)

